buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.3.1'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.2'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName '1.0'
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
        testApplicationId 'com.jaynewstrom.viewmode.androidTest'
    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
    }
}

dependencies {
    compile 'com.android.support:design:23.1.1'

    androidTestCompile 'junit:junit:4.12'
    androidTestCompile 'com.android.support.test:runner:0.4'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'
    androidTestCompile 'org.mockito:mockito-core:1.10.19'
    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:1.2'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

artifacts {
    archives sourcesJar
}

group = PROJECT_GROUP_ID
version = PROJECT_VERSION

if (project.rootProject.file('local.properties').exists()) {
    Properties localProperties = new Properties()
    localProperties.load(project.rootProject.file('local.properties').newDataInputStream())

    bintray {
        user = localProperties.getProperty('bintrayUser')
        key = localProperties.getProperty('bintrayApiKey')
        configurations = ['archives']
        publish = true
        pkg {
            repo = PROJECT_REPO
            name = 'view-mode'
            userOrg = user
            licenses = ['Apache-2.0']
            vcsUrl = PROJECT_VCS_URL
            version {
                name = PROJECT_VERSION
                desc = PROJECT_DESCRIPTION
            }
        }
    }
}
